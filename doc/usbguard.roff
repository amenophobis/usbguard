.\" Generated with Ronnjs 0.4.0
.\" http://github.com/kapouer/ronnjs
.
.TH "USBGUARD" "1" "January 2016" "" "1"
.
.SH "NAME"
\fBusbguard\fR \-\- USBGuard command\-line interface
.
.SH "SYNOPSIS"
\fBusbguard [<OPTIONS>] <command> [<COMMAND\-OPTIONS>] \.\.\.\fR
.
.P
\fBusbguard list\-devices\fR
.
.P
\fBusbguard allow\-device <id>\fR
.
.P
\fBusbguard block\-device <id>\fR
.
.P
\fBusbguard reject\-device <id>\fR
.
.P
\fBusbguard list\-rules\fR
.
.P
\fBusbguard append\-rule <rule>\fR
.
.P
\fBusbguard remove\-rule <id>\fR
.
.P
\fBusbguard generate\-policy\fR
.
.P
\fBusbguard watch\fR
.
.SH "DESCRIPTION"
The \fBusbguard\fR command provides a command\-line interface (CLI) to the \fBusbguard\-daemon\fR(8) instance and provides a tool for generating initial USBGuard policies\.
.
.SH "OPTIONS"
.
.SH "SUB\-COMMANDS"
\fBusbguard list\-devices\fR
.
.P
List all USB devices recognized by the USBGuard daemon\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-a\fR,\fB\-\-allowed\fR
List allowed devices\.
.
.IP "\(bu" 4
\fB\-b\fR\|\.\fB\-\-blocked\fR
List blocked devices\.
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.P
\fBusbguard allow\-device [<OPTIONS>] <id>\fR
.
.P
Authorize a device identified by the device \fIid\fR to interact with the system\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-p\fR,\fB\-\-permanent\fR
Make the decision permanent\. A device specific allow rule will be appended to the current policy\.
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.P
\fBusbguard block\-device [<OPTIONS>] <id>\fR
.
.P
Deauthorize a device indentified by the device \fIid\fR\|\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-p\fR,\fB\-\-permanent\fR
Make the decision permanent\. A device specific block rule will be appended to the current policy\.
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.P
\fBusbguard reject\-device [<OPTIONS>] <id>\fR
.
.P
Deauthorize and remove a device indentified by the device \fIid\fR\|\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-p\fR,\fB\-\-permanent\fR
Make the decision permanent\. A device specific reject rule will be appended to the current policy\.
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.P
\fBusbguard list\-rules [<OPTIONS>]\fR
.
.P
List the rule set (policy) used by the USBGuard daemon\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.P
\fBusbguard append\-rule [<OPTIONS>] <rule>\fR
.
.P
Append the \fIrule\fR to the current rule set\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-a\fR,\fB\-\-after <id>\fR
Append the new rule after a rule with the specified rule \fIid\fR\|\.
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.P
\fBusbguard remove\-rule [<OPTIONS>] <id>\fR
.
.P
Remove a rule identified by the rule \fIid\fR from the rule set\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.P
\fBusbguard generate\-policy [<OPTIONS>]\fR
.
.P
Generate a rule set (policy) which authorizes the currently connected USB devices\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-p\fR,\fB\-\-with\-ports\fR
Generate port specific rules for all devices\. By default, port specific rules are generated only for devices which do not export an iSerial value\.
.
.IP "\(bu" 4
\fB\-P\fR,\fB\-\-no\-ports\-sn\fR
Don\'t generate port specific rules for devices without an iSerial value\. Without this option, the tool will add a via\-port attribute to any device that doesn\'t provide a serial number\. This is a security measure to limit devices that cannot be uniquely identified to connect only via a specific port\. This makes it harder to bypass the policy since the real device will ocupy the allowed USB port most of the time\.
.
.IP "\(bu" 4
\fB\-t\fR,\fB\-\-target <target>\fR
Generate an explicit "catch all" rule with the specified target\. The target can be one of the following values: \fBallow\fR, \fBblock\fR, \fBreject\fR\|\.
.
.IP "\(bu" 4
\fB\-X\fR,\fB\-\-no\-hashes\fR
Don\'t generate a hash attribute for each device\.
.
.IP "\(bu" 4
\fB\-H\fR,\fB\-\-hash\-only\fR
Generate a hash\-only policy\.
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.P
\fBusbguard watch [<OPTIONS>]\fR
.
.P
Watch the IPC interface events and print them to stdout\.
.
.P
Available options:
.
.IP "\(bu" 4
\fB\-h\fR,\fB\-\-help\fR
Show help\.
.
.IP "" 0
.
.SH "EXAMPLES"
1) Creating an initial policy:
    $ sudo usbguard generate\-policy > rules\.conf
    $ vi rules\.conf
    (review/modify the rule set)
    $ sudo install \-m 0600 \-o root \-g root \\
       rules\.conf /etc/usbguard/rules\.conf
.
.SH "BUGS"
If you find a bug in this software or if you\'d like to request a feature to be implemented, please file a ticket at https://github\.com/dkopecek/usbguard/issues/new \fI\fR\|\.
.
.SH "AUTHOR"
Daniel Kopeček \fIdkopecek@redhat\.com\fR
.
.SH "COPYRIGHT"
Copyright © 2015 Red Hat, Inc\.  License GPLv2+: GNU GPL version 2 or later \fIhttp://gnu\.org/licenses/gpl\.html\fR\|\. This is free software: you are free to change and redistribute it\.  There is NO WARRANTY, to the extent permitted by law\.
.
.SH "SEE ALSO"
usbguard\-rules\.conf(5), usbguard\-daemon(8), usbguard\-daemon\.conf(5)